services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deer-flow-backend
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://backend:8000
    env_file:
      - .env
    volumes:
      - ./conf.yaml:/app/conf.yaml:ro
      - deer_flow_data:/app/data
    restart: unless-stopped
    networks:
      - deer-flow-network
      - coolify
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.deer-flow-backend.loadbalancer.server.port=8000"
      - "traefik.http.services.deer-flow-backend.loadbalancer.healthcheck.path=/docs"
      - "traefik.http.services.deer-flow-backend.loadbalancer.healthcheck.interval=30s"

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://deer-flow-api.cyberteam.click/api
    container_name: deer-flow-frontend
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - deer-flow-network
      - coolify
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.deer-flow-frontend.loadbalancer.server.port=3000"

volumes:
  deer_flow_data:
    driver: local

networks:
  deer-flow-network:
    driver: bridge
  coolify:
    external: true
